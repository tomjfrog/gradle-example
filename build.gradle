plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "com.jfrog.artifactory" version "5.+"
    id 'maven-publish' // ***** This is needed
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    maven {
        url = "https://tomjfrog.jfrog.io/artifactory/gradleexample-maven-remote"
        credentials {
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
        }
    }
}

// *** This block is necessary due to the Artifactory Gradle Plugin's extension of the `maven-publish` plugin
publishing {
    publications {
        myPublication(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionResult()
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            groupId = 'com.tomjfrog'
            artifactId = 'gradle-example'
            version = '1.0.4.3-SNAPSHOT'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// This block comes from https://github.com/jfrog/artifactory-gradle-plugin and is the only means to
// set both 'release` and `snapshot` repos.
artifactory {
    publish {
        // Define the Artifactory URL for publishing artifacts
        contextUrl = 'https://tomjfrog.jfrog.io/artifactory'
        // Define the project repository to which the artifacts will be published
        repository {
            // Set the Artifactory repository key
            // Specify the publisher username
            //  username = findProperty("artifactory_user") <--------- Not needed since using JF CLI
            //  password = findProperty("artifactory_password") <---------- Not needed since using JF CLI
            //  Specify release and snapshot repositories; let the plugin decide to which one to publish
            releaseRepoKey = "gradleexample-libs-release-local"
            snapshotRepoKey = "gradleexample-libs-snapshot-local"
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
        }
        // Include all configured publications for all the modules
        defaults {
            publications('ALL_PUBLICATIONS')
        }
        publishBuildInfo = true
        buildInfo {
            // Set specific build and project information for the build-info
            buildName = "legacy-gradle-plugin"
            buildNumber = System.getenv("BUILD_NUMBER")

            // If Project Support is needed, please add the Project Prefix or Project ID here

             project = "project-key"
            // Add a dynamic property to the build-info
            // Generate a copy of the build-info.json file in the following path
//             generatedBuildInfoFilePath = "/Users/gradle-example-publish/myBuildInfoCopy.json"
            // Generate a file with all the deployed artifacts' information in the following path
            // deployableArtifactsFilePath = "/Users/gradle-example-publish/myArtifactsInBuild.json"
        }

    }
}
